{"version":3,"sources":["Assets/Beings/Player/PlayerBody.svg","Assets/Decors/LargeFlower.svg","Assets/Decors/SmallFlower.svg","Assets/Decors/LargeHill.svg","Assets/Decors/SmallHill.svg","Assets/Decors/LargePebble.svg","Assets/Decors/MediumPebble.svg","Assets/Decors/SmallPebble.svg","Assets/Resources/Ores/LargeCopper.svg","Assets/Resources/Ores/SmallCopper.svg","Assets/Resources/Ores/LargeGold.svg","Assets/Resources/Ores/SmallGold.svg","Assets/Resources/Ores/LargeIron.svg","Assets/Resources/Ores/SmallIron.svg","Assets/Resources/Ores/LargeRock.svg","Assets/Resources/Ores/SmallRock.svg","Assets/Resources/Trees/LargeTree.svg","Assets/Resources/Trees/MediumTree.svg","Assets/Resources/Trees/SmallTree.svg","Assets/Resources/Trees/LargeDarkTree.svg","Assets/Resources/Trees/MediumDarkTree.svg","Assets/Resources/Trees/SmallDarkTree.svg","Assets/UI/InventorySlot.svg","Assets/Items/WoodItem.svg","Assets/Items/StoneItem.svg","Logic/Scene/Preload.js","Logic/Scene/Update.js","Config/KeyboardInput.js","Items/Item.js","Config/InitialItems.js","Items/Wood.js","Items/Stone.js","Entities/Entity.js","GUI/Text.js","GUI/Image.js","GUI/InventorySlot.js","GUI/Inventory.js","GUI/index.js","Entities/RigidEntity.js","Logic/CursorSeeker.js","Logic/Movement.js","Entities/Ecosystem/Player.js","Config/ColorPallete.js","Entities/Camera.js","Entities/Environment/Hills/SmallHill.js","Entities/Environment/Hills/LargeHill.js","Entities/Environment/Flowers/LargeFlower.js","Entities/Environment/Flowers/SmallFlower.js","Entities/Environment/Pebbles/LargePebble.js","Entities/Environment/Pebbles/MediumPebble.js","Entities/Environment/Pebbles/SmallPebble.js","Entities/Environment/Ores/LargeGold.js","Entities/Environment/Ores/LargeRock.js","Entities/Environment/Ores/SmallRock.js","Entities/Environment/Trees/LargeTree.js","Entities/Environment/Trees/MediumDarkTree.js","Entities/Environment/Trees/SmallTree.js","Logic/Scene/Create.js","Config/Phaser.js","index.js"],"names":["preload","this","load","svg","PlayerBody","LargeFlower","SmallFlower","LargeHill","SmallHill","LargePebble","MediumPebble","SmallPebble","LargeCopper","SmallCopper","LargeGold","SmallGold","LargeIron","SmallIron","LargeRock","SmallRock","LargeTree","LargeDarkTree","MediumTree","MediumDarkTree","SmallTree","SmallDarkTree","InventorySlot","WoodItem","StoneItem","update","player","cSeeker","doSeekCursor","movement","doMove","doInitializeInput","KeyCodes","Phaser","Input","Keyboard","W","input","keyboard","addKey","A","S","D","Item","name","texture","validate","arguments","INITIAL_ITEMS","item","count","Entity","scene","x","y","_doAddToScene","add","existing","GameObjects","Sprite","Text","text","style","fontSize","color","setDepth","setScrollFactor","Image","setAlpha","setScale","icon","_doUpdate","_doUpdateIcon","_doUpdateText","setTexture","setText","length","setX","alpha","Inventory","slots","sCount","_doInitializeSlots","_doSetInitialItems","slot","find","doPushItem","doRemoveItem","Array","fill","map","index","window","innerWidth","innerHeight","push","i","_doCreateSlot","forEach","doSetupUI","RigidEntity","_doEnablePhysics","_setCollider","physics","world","enable","body","setAllowGravity","CursorSeeker","cameras","mousePointer","updateWorldPoint","main","mouseX","worldX","mouseY","worldY","playerX","playerY","angle","Math","Angle","Between","setRotation","Movement","X","Y","SPEED","isDown","_handleYMovement","_handleXMovement","setVelocityX","sqrt","setVelocityY","Player","setCollider","setCircle","pallete","BACKGROUND","Camera","_doInitialize","addExisting","setBackgroundColor","colors","doFollowPlayer","startFollow","Cameras","Scene2D","setImmovable","collider","LargeTree1","MediumTree2","SmallTree1","create","camera","call","doInitializeUI","_config","socket","type","AUTO","width","height","roundPixels","default","arcade","apply","Config","io","Game"],"mappings":"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","file":"static/js/main.f67793aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/PlayerBody.3e91f005.svg\";","export default __webpack_public_path__ + \"static/media/LargeFlower.daeb81d9.svg\";","export default __webpack_public_path__ + \"static/media/SmallFlower.f878ed27.svg\";","export default __webpack_public_path__ + \"static/media/LargeHill.50d2ee12.svg\";","export default __webpack_public_path__ + \"static/media/SmallHill.8d6a8490.svg\";","export default __webpack_public_path__ + \"static/media/LargePebble.336c6dd3.svg\";","export default __webpack_public_path__ + \"static/media/MediumPebble.5b50f050.svg\";","export default __webpack_public_path__ + \"static/media/SmallPebble.ce6a126a.svg\";","export default __webpack_public_path__ + \"static/media/LargeCopper.cf7073a3.svg\";","export default __webpack_public_path__ + \"static/media/SmallCopper.dcd76a60.svg\";","export default __webpack_public_path__ + \"static/media/LargeGold.5a0ed2f3.svg\";","export default __webpack_public_path__ + \"static/media/SmallGold.9637f5d4.svg\";","export default __webpack_public_path__ + \"static/media/LargeIron.f69a6460.svg\";","export default __webpack_public_path__ + \"static/media/SmallIron.be8ae255.svg\";","export default __webpack_public_path__ + \"static/media/LargeRock.ed28c7de.svg\";","export default __webpack_public_path__ + \"static/media/SmallRock.6fed8362.svg\";","export default __webpack_public_path__ + \"static/media/LargeTree.15d3fc32.svg\";","export default __webpack_public_path__ + \"static/media/MediumTree.2736f6ac.svg\";","export default __webpack_public_path__ + \"static/media/SmallTree.e2a9cfdd.svg\";","export default __webpack_public_path__ + \"static/media/LargeDarkTree.be06cd57.svg\";","export default __webpack_public_path__ + \"static/media/MediumDarkTree.6fc81ff1.svg\";","export default __webpack_public_path__ + \"static/media/SmallDarkTree.5745e47b.svg\";","export default __webpack_public_path__ + \"static/media/InventorySlot.9b8f093d.svg\";","export default __webpack_public_path__ + \"static/media/WoodItem.fc9561ef.svg\";","export default __webpack_public_path__ + \"static/media/StoneItem.20313201.svg\";","// * ENTITIES / PLAYER\nimport PlayerBody from \"Assets/Beings/Player/PlayerBody.svg\";\n\n// * DECORS\nimport LargeFlower from \"Assets/Decors/LargeFlower.svg\";\nimport SmallFlower from \"Assets/Decors/SmallFlower.svg\";\nimport LargeHill from \"Assets/Decors/LargeHill.svg\";\nimport SmallHill from \"Assets/Decors/SmallHill.svg\";\nimport LargePebble from \"Assets/Decors/LargePebble.svg\";\nimport MediumPebble from \"Assets/Decors/MediumPebble.svg\";\nimport SmallPebble from \"Assets/Decors/SmallPebble.svg\";\n\n// * RESOURCES / ORES\nimport LargeCopper from \"Assets/Resources/Ores/LargeCopper.svg\";\nimport SmallCopper from \"Assets/Resources/Ores/SmallCopper.svg\";\nimport LargeGold from \"Assets/Resources/Ores/LargeGold.svg\";\nimport SmallGold from \"Assets/Resources/Ores/SmallGold.svg\";\nimport LargeIron from \"Assets/Resources/Ores/LargeIron.svg\";\nimport SmallIron from \"Assets/Resources/Ores/SmallIron.svg\";\nimport LargeRock from \"Assets/Resources/Ores/LargeRock.svg\";\nimport SmallRock from \"Assets/Resources/Ores/SmallRock.svg\";\n\n// * RESOURCES / TREES\nimport LargeTree from \"Assets/Resources/Trees/LargeTree.svg\";\nimport MediumTree from \"Assets/Resources/Trees/MediumTree.svg\";\nimport SmallTree from \"Assets/Resources/Trees/SmallTree.svg\";\nimport LargeDarkTree from \"Assets/Resources/Trees/LargeDarkTree.svg\";\nimport MediumDarkTree from \"Assets/Resources/Trees/MediumDarkTree.svg\";\nimport SmallDarkTree from \"Assets/Resources/Trees/SmallDarkTree.svg\";\n\n// * UI\nimport InventorySlot from \"Assets/UI/InventorySlot.svg\";\n\n// * ITEMS\nimport WoodItem from \"Assets/Items/WoodItem.svg\";\nimport StoneItem from \"Assets/Items/StoneItem.svg\";\n\nexport default function preload() {\n  // * ENTITIES / PLAYER\n  this.load.svg(\"PLAYER_BODY\", PlayerBody);\n\n  // * DECORS\n  this.load.svg(\"LARGE_FLOWER\", LargeFlower);\n  this.load.svg(\"SMALL_FLOWER\", SmallFlower);\n  this.load.svg(\"LARGE_HILL\", LargeHill);\n  this.load.svg(\"SMALL_HILL\", SmallHill);\n  this.load.svg(\"LARGE_PEBBLE\", LargePebble);\n  this.load.svg(\"MEDIUM_PEBBLE\", MediumPebble);\n  this.load.svg(\"SMALL_PEBBLE\", SmallPebble);\n\n  // * RESOURCES / ORES\n  this.load.svg(\"LARGE_COPPER\", LargeCopper);\n  this.load.svg(\"SMALL_COPPER\", SmallCopper);\n  this.load.svg(\"LARGE_GOLD\", LargeGold);\n  this.load.svg(\"SMALL_GOLD\", SmallGold);\n  this.load.svg(\"LARGE_IRON\", LargeIron);\n  this.load.svg(\"SMALL_IRON\", SmallIron);\n  this.load.svg(\"LARGE_ROCK\", LargeRock);\n  this.load.svg(\"SMALL_ROCK\", SmallRock);\n\n  // * RESOURCES / TREES\n  this.load.svg(\"LARGE_TREE\", LargeTree);\n  this.load.svg(\"LARGE_DARK_TREE\", LargeDarkTree);\n  this.load.svg(\"MEDIUM_TREE\", MediumTree);\n  this.load.svg(\"MEDIUM_DARK_TREE\", MediumDarkTree);\n  this.load.svg(\"SMALL_TREE\", SmallTree);\n  this.load.svg(\"SMALL_DARK_TREE\", SmallDarkTree);\n\n  // * UI\n  this.load.svg(\"INVENTORY_SLOT\", InventorySlot);\n\n  // * ITEMS\n  this.load.svg(\"WOOD_ITEM\", WoodItem);\n  this.load.svg(\"STONE_ITEM\", StoneItem);\n}\n","export default function update() {\n  this.player.cSeeker.doSeekCursor();\n  this.player.movement.doMove();\n}\n","import Phaser from \"phaser\";\n\nfunction doInitializeInput() {\n  const KeyCodes = Phaser.Input.Keyboard.KeyCodes;\n  this.W = this.input.keyboard.addKey(KeyCodes.W);\n  this.A = this.input.keyboard.addKey(KeyCodes.A);\n  this.S = this.input.keyboard.addKey(KeyCodes.S);\n  this.D = this.input.keyboard.addKey(KeyCodes.D);\n}\n\nexport default doInitializeInput;\n","import validate from \"aproba\";\n\nclass Item {\n  /**\n   * @param {string} name\n   * @param {string} texture\n   */\n  constructor(name, texture) {\n    validate(\"SS\", arguments);\n    this.name = name;\n    this.texture = texture;\n  }\n}\n\nexport default Item;\n","import WoodItem from \"Items/Wood\";\nimport StoneItem from \"Items/Stone\";\n\nconst INITIAL_ITEMS = [\n  { item: WoodItem, count: 1000 },\n  { item: StoneItem, count: 100 },\n];\n\nexport default INITIAL_ITEMS;\n","import Item from \"./Item\";\n\nclass WoodItem extends Item {\n  constructor() {\n    super(\"Wood\", \"WOOD_ITEM\");\n  }\n}\n\nexport default new WoodItem();\n","import Item from \"./Item\";\n\nclass StoneItem extends Item {\n  constructor() {\n    super(\"Stone\", \"STONE_ITEM\");\n  }\n}\n\nexport default new StoneItem();\n","import validate from \"aproba\";\nimport Phaser from \"phaser\";\n\nclass Entity extends Phaser.GameObjects.Sprite {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   * @param {string} texture\n   */\n  constructor(scene, x, y, texture) {\n    validate(\"ONNS\", arguments);\n    super(scene, x, y, texture);\n    this._doAddToScene();\n  }\n\n  _doAddToScene() {\n    this.scene.add.existing(this);\n  }\n}\n\nexport default Entity;\n","import Phaser from \"phaser\";\n\nclass Text extends Phaser.GameObjects.Text {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   * @param {string} text\n   */\n  constructor(scene, x, y, text = \"\") {\n    const style = { fontSize: 12, color: \"#ffffff\" };\n    super(scene, x, y, text, style);\n\n    this.setDepth(200);\n    this.setScrollFactor(0);\n    this._doAddToScene();\n  }\n\n  _doAddToScene() {\n    this.scene.add.existing(this);\n  }\n}\n\nexport default Text;\n","import Entity from \"Entities/Entity\";\n\nclass Image extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   * @param {string} texture\n   */\n  constructor(scene, x, y, texture = \"\") {\n    super(scene, x, y, texture);\n    this.setScrollFactor(0);\n    this.setDepth(100);\n  }\n}\n\nexport default Image;\n","import validate from \"aproba\";\nimport Entity from \"Entities/Entity\";\nimport Text from \"GUI/Text\";\nimport Image from \"GUI/Image\";\n\nclass InventorySlot extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"INVENTORY_SLOT\");\n\n    this.setScrollFactor(0);\n    this.setDepth(100);\n    this.setAlpha(0.9);\n    this.setScale(0.7);\n\n    this.item = null;\n    this.count = 0;\n\n    this.text = new Text(scene, x, y + 10);\n    this.icon = new Image(scene, x, y);\n    this.icon.setScale(0.7);\n    this._doUpdate();\n  }\n\n  /**\n   * @param {object} item\n   * @param {number} count\n   */\n  doPushItem(item, count) {\n    validate(\"ON\", arguments);\n\n    this.count += count;\n    if (this.item === null) {\n      this.item = item;\n    }\n\n    this._doUpdate();\n    return this;\n  }\n\n  /**\n   * @param {number} count\n   */\n  doRemoveItem(count) {\n    validate(\"N\", arguments);\n\n    this.count -= count;\n    if (this.count <= 0) {\n      this.count = 0;\n      this.item = null;\n    }\n\n    this._doUpdate();\n    return this;\n  }\n\n  _doUpdate() {\n    this._doUpdateIcon();\n    this._doUpdateText();\n  }\n\n  _doUpdateIcon() {\n    const { icon, item } = this;\n\n    if (item) {\n      icon.setTexture(item.texture);\n      icon.setAlpha(1);\n      return;\n    }\n\n    icon.setTexture(\"\");\n    icon.setAlpha(0);\n  }\n\n  _doUpdateText() {\n    const { x, text, count } = this;\n\n    if (count > 999) text.setText(\"x999+\");\n    else text.setText(\"x\" + count);\n\n    const length = text.text.length;\n    text.setX(x + 30 - length * 8.5);\n\n    if (count > 1 && text.alpha === 0) {\n      text.setAlpha(1);\n      return;\n    }\n\n    text.setAlpha(0);\n  }\n}\n\nexport default InventorySlot;\n","import validate from \"aproba\";\nimport INITIAL_ITEMS from \"Config/InitialItems\";\n\nimport Item from \"Items/Item\";\nimport InventorySlot from \"./InventorySlot\";\n\nclass Inventory {\n  /**\n   * @param {object} scene\n   */\n  constructor(scene) {\n    validate(\"O\", arguments);\n\n    this.scene = scene;\n    this.slots = [];\n    this.sCount = 8;\n\n    this._doInitializeSlots();\n    this._doSetInitialItems();\n  }\n\n  /**\n   * @param {object} item\n   * @param {number} count\n   */\n  doPushItem(item, count) {\n    validate(\"ON\", arguments);\n    if (item instanceof Item === false) return;\n\n    const slot = this.slots.find((slot) => {\n      return slot.item == null || slot.item.name === item.name;\n    });\n    if (slot) slot.doPushItem(item, count);\n  }\n\n  /**\n   * @param {object} item\n   * @param {number} count\n   */\n  doRemoveItem(item, count) {\n    validate(\"ON\", arguments);\n    if (item instanceof Item === false) return;\n\n    const slot = this.slots.find((slot) => slot.item.name === item.name);\n    if (slot) slot.doRemoveItem(count);\n  }\n\n  /**\n   * @param {number} count\n   */\n  doPushSlots(count) {\n    validate(\"N\", arguments);\n    const slots = new Array(count).fill(0).map(() => new InventorySlot());\n    this.slots = [...this.slots, slots];\n  }\n\n  /**\n   * @param {number} index\n   */\n  _doCreateSlot(index) {\n    validate(\"N\", arguments);\n\n    const count = this.sCount;\n    const x = (window.innerWidth - count * 80) / 2 + index * 80 + 40;\n    const y = window.innerHeight - 40;\n\n    this.slots.push(new InventorySlot(this.scene, x, y));\n  }\n\n  _doInitializeSlots() {\n    for (let i = 0; i < this.sCount; i++) {\n      this._doCreateSlot(i);\n    }\n  }\n\n  _doSetInitialItems() {\n    INITIAL_ITEMS.forEach(({ item, count }) => {\n      this.doPushItem(item, count);\n    });\n  }\n}\n\nexport default Inventory;\n","import Inventory from \"./Inventory\";\n\nfunction doSetupUI() {\n  new Inventory(this);\n}\n\nexport default doSetupUI;\n","import validate from \"aproba\";\nimport Entity from \"Entities/Entity\";\n\nclass RigidEntity extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   * @param {string} texture\n   */\n  constructor(scene, x, y, texture) {\n    validate(\"ONNS\", arguments);\n    super(scene, x, y, texture);\n    this._doEnablePhysics();\n    this._setCollider();\n  }\n\n  _doEnablePhysics() {\n    this.scene.physics.world.enable(this);\n    this.body.setAllowGravity(false);\n  }\n\n  _setCollider() {}\n}\n\nexport default RigidEntity;\n","import validate from \"aproba\";\nimport Phaser from \"phaser\";\n\nclass CursorSeeker {\n  /**\n   * @param {object} player\n   * @param {object} scene\n   */\n  constructor(player, scene) {\n    validate(\"OO\", arguments);\n    this.player = player;\n    this.scene = scene;\n  }\n\n  doSeekCursor() {\n    const { input, cameras } = this.scene;\n    input.mousePointer.updateWorldPoint(cameras.main);\n\n    const mouseX = input.mousePointer.worldX;\n    const mouseY = input.mousePointer.worldY;\n\n    const playerX = this.player.x;\n    const playerY = this.player.y;\n\n    const angle = Phaser.Math.Angle.Between(playerX, playerY, mouseX, mouseY);\n    this.player.setRotation(angle - 1.5);\n  }\n}\n\nexport default CursorSeeker;\n","import validate from \"aproba\";\n\nclass Movement {\n  /**\n   * @param {object} player\n   * @param {object} scene\n   */\n  constructor(player, scene) {\n    validate(\"OO\", arguments);\n\n    this.player = player;\n    this.scene = scene;\n\n    this.X = 0;\n    this.Y = 0;\n    this.SPEED = 200;\n  }\n\n  _handleYMovement() {\n    const { W, S } = this.scene;\n    if (W.isDown) this.Y = -1;\n    else if (S.isDown) this.Y = 1;\n    else this.Y = 0;\n  }\n\n  _handleXMovement() {\n    const { A, D } = this.scene;\n    if (D.isDown) this.X = 1;\n    else if (A.isDown) this.X = -1;\n    else this.X = 0;\n  }\n\n  doMove() {\n    this._handleYMovement();\n    this._handleXMovement();\n\n    if (this.X !== 0 && this.Y !== 0) {\n      this.player.body.setVelocityX((this.X * this.SPEED) / Math.sqrt(2));\n      this.player.body.setVelocityY((this.Y * this.SPEED) / Math.sqrt(2));\n      return;\n    }\n\n    this.player.body.setVelocityX(this.X * this.SPEED);\n    this.player.body.setVelocityY(this.Y * this.SPEED);\n  }\n}\n\nexport default Movement;\n","import validate from \"aproba\";\nimport RigidEntity from \"Entities/RigidEntity\";\nimport CursorSeeker from \"Logic/CursorSeeker\";\nimport Movement from \"Logic/Movement\";\n\nclass Player extends RigidEntity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n\n    super(scene, x, y, \"PLAYER_BODY\");\n    this.setDepth(25);\n\n    this.cSeeker = new CursorSeeker(this, scene);\n    this.movement = new Movement(this, scene);\n    this.setCollider();\n  }\n\n  setCollider() {\n    this.body.setCircle(35);\n  }\n}\n\nexport default Player;\n","const pallete = {\n  BACKGROUND: \"#9AB855\",\n};\n\nexport default pallete;\n","import validate from \"aproba\";\nimport Phaser from \"phaser\";\nimport colors from \"Config/ColorPallete\";\n\nclass Camera extends Phaser.Cameras.Scene2D.Camera {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(x, y, window.innerWidth, window.innerHeight);\n    this.scene = scene;\n    this._doInitialize();\n  }\n\n  _doInitialize() {\n    this.scene.cameras.cameras.length = 0;\n    this.scene.cameras.addExisting(this, true);\n    this.setBackgroundColor(colors.BACKGROUND);\n    this.doFollowPlayer();\n  }\n\n  doFollowPlayer() {\n    const { player } = this.scene;\n    this.startFollow(player);\n  }\n}\n\nexport default Camera;\n","import validate from \"aproba\";\nimport Entity from \"Entities/Entity\";\n\nclass SmallHill extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"SMALL_HILL\");\n    this.setDepth(0);\n  }\n}\n\nexport default SmallHill;\n","import validate from \"aproba\";\nimport Entity from \"Entities/Entity\";\n\nclass LargeHill extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"LARGE_HILL\");\n    this.setDepth(0);\n  }\n}\n\nexport default LargeHill;\n","import validate from \"aproba\";\nimport Entity from \"Entities/Entity\";\n\nclass LargeFlower extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"LARGE_FLOWER\");\n    this.setDepth(1);\n  }\n}\n\nexport default LargeFlower;\n","import validate from \"aproba\";\nimport Entity from \"Entities/Entity\";\n\nclass SmallFlower extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"SMALL_FLOWER\");\n    this.setDepth(1);\n  }\n}\n\nexport default SmallFlower;\n","import validate from \"aproba\";\nimport Entity from \"Entities/Entity\";\n\nclass LargePebble extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"LARGE_PEBBLE\");\n    this.setDepth(1);\n  }\n}\n\nexport default LargePebble;\n","import validate from \"aproba\";\nimport Entity from \"Entities/Entity\";\n\nclass MediumPebble extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"MEDIUM_PEBBLE\");\n    this.setDepth(1);\n  }\n}\n\nexport default MediumPebble;\n","import validate from \"aproba\";\nimport Entity from \"Entities/Entity\";\n\nclass SmallPebble extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"SMALL_PEBBLE\");\n    this.setDepth(1);\n  }\n}\n\nexport default SmallPebble;\n","import validate from \"aproba\";\nimport RigidEntity from \"Entities/RigidEntity\";\n\nclass LargeGold extends RigidEntity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"LARGE_GOLD\");\n    this.setDepth(20);\n  }\n\n  _setCollider() {\n    const { scene, body } = this;\n    body.setImmovable();\n    body.setCircle(65, 5, 10);\n    scene.physics.add.collider(scene.player, this);\n  }\n}\n\nexport default LargeGold;\n","import validate from \"aproba\";\nimport RigidEntity from \"Entities/RigidEntity\";\n\nclass LargeRock extends RigidEntity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"LARGE_ROCK\");\n    this.setDepth(20);\n  }\n\n  _setCollider() {\n    const { scene, body } = this;\n    body.setImmovable();\n    body.setCircle(65, 5, 10);\n    scene.physics.add.collider(scene.player, this);\n  }\n}\n\nexport default LargeRock;\n","import validate from \"aproba\";\nimport RigidEntity from \"Entities/RigidEntity\";\n\nclass SmallRock extends RigidEntity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"SMALL_ROCK\");\n    this.setDepth(10);\n  }\n\n  _setCollider() {\n    const { scene, body } = this;\n    body.setImmovable();\n    body.setCircle(50, 5, 10);\n    scene.physics.add.collider(scene.player, this);\n  }\n}\n\nexport default SmallRock;\n","import validate from \"aproba\";\nimport RigidEntity from \"Entities/RigidEntity\";\n\nclass LargeTree1 extends RigidEntity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"LARGE_TREE\");\n    this.setDepth(50);\n  }\n\n  _setCollider() {\n    const { scene, body } = this;\n    body.setImmovable();\n    body.setCircle(60, 150, 100);\n    scene.physics.add.collider(scene.player, this);\n  }\n}\n\nexport default LargeTree1;\n","import validate from \"aproba\";\nimport RigidEntity from \"Entities/RigidEntity\";\n\nclass MediumTree2 extends RigidEntity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"MEDIUM_DARK_TREE\");\n    this.setDepth(40);\n  }\n\n  _setCollider() {\n    const { scene, body } = this;\n    body.setImmovable();\n    body.setCircle(50, 100, 60);\n    scene.physics.add.collider(scene.player, this);\n  }\n}\n\nexport default MediumTree2;\n","import validate from \"aproba\";\nimport RigidEntity from \"Entities/RigidEntity\";\n\nclass SmallTree1 extends RigidEntity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"SMALL_TREE\");\n    this.setDepth(30);\n  }\n\n  _setCollider() {\n    const { scene, body } = this;\n    body.setImmovable();\n    body.setCircle(30, 60, 40);\n    scene.physics.add.collider(scene.player, this);\n  }\n}\n\nexport default SmallTree1;\n","import doInitializeInput from \"Config/KeyboardInput\";\nimport doInitializeUI from \"GUI\";\n\n// INFO _ PLAYER _\nimport Player from \"Entities/Ecosystem/Player\";\nimport Camera from \"Entities/Camera\";\n\n// INFO _ HILLS _\nimport SmallHill from \"Entities/Environment/Hills/SmallHill\";\nimport LargeHill from \"Entities/Environment/Hills/LargeHill\";\n\n// INFO _ FLOWERS _\nimport LargeFlower from \"Entities/Environment/Flowers/LargeFlower\";\nimport SmallFlower from \"Entities/Environment/Flowers/SmallFlower\";\n\n// INFO _ PEBBLES _\nimport LargePebble from \"Entities/Environment/Pebbles/LargePebble\";\nimport MediumPebble from \"Entities/Environment/Pebbles/MediumPebble\";\nimport SmallPebble from \"Entities/Environment/Pebbles/SmallPebble\";\n\n// INFO _ ORES _\nimport LargeGold from \"Entities/Environment/Ores/LargeGold\";\nimport LargeRock from \"Entities/Environment/Ores/LargeRock\";\nimport SmallRock from \"Entities/Environment/Ores/SmallRock\";\n\n// INFO _ TREES _\nimport LargeTree from \"Entities/Environment/Trees/LargeTree\";\nimport MediumDarkTree from \"Entities/Environment/Trees/MediumDarkTree\";\nimport SmallTree from \"Entities/Environment/Trees/SmallTree\";\n\nexport default function create() {\n  this.player = new Player(this, 0, 0);\n  this.camera = new Camera(this, 0, 0);\n\n  doInitializeInput.call(this);\n  doInitializeUI.call(this);\n\n  new LargeHill(this, 0, 0);\n  new SmallHill(this, -200, 200);\n\n  new LargeFlower(this, -100, -80);\n  new SmallFlower(this, 180, 40);\n\n  new LargePebble(this, -150, 160);\n  new MediumPebble(this, 120, -100);\n  new SmallPebble(this, 140, 300);\n\n  new SmallTree(this, -200, -200);\n  new LargeTree(this, -350, -50);\n  new MediumDarkTree(this, 250, -100);\n  new LargeRock(this, -340, -220);\n\n  new SmallRock(this, 200, 120);\n  new LargeGold(this, 100, 200);\n}\n","import Phaser from \"phaser\";\nimport preload from \"Logic/Scene/Preload\";\nimport update from \"Logic/Scene/Update\";\nimport create from \"Logic/Scene/Create\";\n\nconst CONFIG = (socket) => ({\n  type: Phaser.AUTO,\n  width: window.innerWidth,\n  height: window.innerHeight,\n  roundPixels: false,\n  physics: {\n    default: \"arcade\",\n    arcade: {\n      // debug: true,\n    },\n  },\n  scene: {\n    preload,\n    create: function () {\n      return create.apply(this, [socket]);\n    },\n    update: function () {\n      return update.apply(this, [socket]);\n    },\n  },\n});\n\nexport default CONFIG;\n","import \"index.css\";\nimport Phaser from \"phaser\";\nimport io from \"socket.io-client\";\nimport Config from \"Config/Phaser\";\n\nconst socket = io(\"http://localhost:8000\");\nconst _config = Config(socket);\nnew Phaser.Game(_config);\n"],"sourceRoot":""}