{"version":3,"sources":["Assets/player_body.svg","Assets/flower_l.svg","Assets/flower_s.svg","Assets/hill_l.svg","Assets/hill_s.svg","Assets/pebble_l.svg","Assets/pebble_m.svg","Assets/pebble_s.svg","Assets/copper_l.svg","Assets/copper_s.svg","Assets/gold_l.svg","Assets/gold_s.svg","Assets/iron_l.svg","Assets/iron_s.svg","Assets/rock_l.svg","Assets/rock_s.svg","Assets/tree_l1.svg","Assets/tree_l2.svg","Assets/tree_m1.svg","Assets/tree_m2.svg","Assets/tree_s1.svg","Assets/tree_s2.svg","Assets/inv_slot.svg","Logic/Scene/Preload.js","Logic/Scene/Update.js","Config/KeyboardInput.js","Logic/Inventory.Item.js","Logic/Inventory.Slot.js","Logic/Inventory.js","Entities/Entity.js","GUI/InventorySlot.js","GUI/Inventory.js","GUI/index.js","Entities/RigidEntity.js","Logic/CursorSeeker.js","Logic/Movement.js","Entities/Ecosystem/Player.js","Config/ColorPallete.js","Entities/Camera.js","Entities/Environment/Hills/SmallHill.js","Entities/Environment/Hills/LargeHill.js","Entities/Environment/Flowers/LargeFlower.js","Entities/Environment/Flowers/SmallFlower.js","Entities/Environment/Pebbles/LargePebble.js","Entities/Environment/Pebbles/MediumPebble.js","Entities/Environment/Pebbles/SmallPebble.js","Entities/Environment/Ores/LargeGold.js","Entities/Environment/Ores/LargeRock.js","Entities/Environment/Ores/SmallRock.js","Entities/Environment/Trees/LargeTree1.js","Entities/Environment/Trees/MediumTree2.js","Entities/Environment/Trees/SmallTree1.js","Logic/Scene/Create.js","Config/Phaser.js","index.js"],"names":["preload","this","load","svg","PLAYER_BODY","FLOWER_L","FLOWER_S","PEBBLE_L","PEBBLE_M","PEBBLE_S","HILL_L","HILL_S","COPPER_L","COPPER_S","GOLD_L","GOLD_S","IRON_L","IRON_S","ROCK_L","ROCK_S","TREE_L1","TREE_L2","TREE_M1","TREE_M2","TREE_S1","TREE_S2","INV_SLOT","update","player","cSeeker","doSeekCursor","movement","doMove","doInitializeInput","KeyCodes","Phaser","Input","Keyboard","W","input","keyboard","addKey","A","S","D","InventoryItem","ID","name","validate","arguments","InventorySlot","item","count","Inventory","slots","Array","fill","slot","find","doPushItem","doRemoveItem","Entity","scene","x","y","texture","_doAddToScene","add","existing","GameObjects","Sprite","setScrollFactor","setDepth","setAlpha","InventoryUI","doCreateSlot","_","index","length","window","innerWidth","innerHeight","InventorySlotUI","inventory","doInitializeSlots","forEach","doSetupUI","RigidEntity","_doEnablePhysics","_setCollider","physics","world","enable","body","setAllowGravity","CursorSeeker","cameras","mousePointer","updateWorldPoint","main","mouseX","worldX","mouseY","worldY","playerX","playerY","angle","Math","Angle","Between","setRotation","Movement","X","Y","SPEED","isDown","_handleYMovement","_handleXMovement","setVelocityX","sqrt","setVelocityY","Player","setCollider","setCircle","pallete","BACKGROUND","Camera","_doInitialize","addExisting","setBackgroundColor","colors","doFollowPlayer","startFollow","Cameras","Scene2D","SmallHill","LargeHill","LargeFlower","SmallFlower","LargePebble","MediumPebble","SmallPebble","LargeGold","setImmovable","collider","LargeRock","SmallRock","LargeTree1","MediumTree2","SmallTree1","create","camera","call","doInitializeUI","_config","socket","type","AUTO","width","height","roundPixels","default","arcade","apply","Config","io","Game"],"mappings":"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","file":"static/js/main.67a4c31f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/player_body.3e91f005.svg\";","export default __webpack_public_path__ + \"static/media/flower_l.daeb81d9.svg\";","export default __webpack_public_path__ + \"static/media/flower_s.f878ed27.svg\";","export default __webpack_public_path__ + \"static/media/hill_l.50d2ee12.svg\";","export default __webpack_public_path__ + \"static/media/hill_s.8d6a8490.svg\";","export default __webpack_public_path__ + \"static/media/pebble_l.336c6dd3.svg\";","export default __webpack_public_path__ + \"static/media/pebble_m.5b50f050.svg\";","export default __webpack_public_path__ + \"static/media/pebble_s.ce6a126a.svg\";","export default __webpack_public_path__ + \"static/media/copper_l.cf7073a3.svg\";","export default __webpack_public_path__ + \"static/media/copper_s.dcd76a60.svg\";","export default __webpack_public_path__ + \"static/media/gold_l.5a0ed2f3.svg\";","export default __webpack_public_path__ + \"static/media/gold_s.9637f5d4.svg\";","export default __webpack_public_path__ + \"static/media/iron_l.f69a6460.svg\";","export default __webpack_public_path__ + \"static/media/iron_s.be8ae255.svg\";","export default __webpack_public_path__ + \"static/media/rock_l.ed28c7de.svg\";","export default __webpack_public_path__ + \"static/media/rock_s.6fed8362.svg\";","export default __webpack_public_path__ + \"static/media/tree_l1.15d3fc32.svg\";","export default __webpack_public_path__ + \"static/media/tree_l2.be06cd57.svg\";","export default __webpack_public_path__ + \"static/media/tree_m1.2736f6ac.svg\";","export default __webpack_public_path__ + \"static/media/tree_m2.6fc81ff1.svg\";","export default __webpack_public_path__ + \"static/media/tree_s1.e2a9cfdd.svg\";","export default __webpack_public_path__ + \"static/media/tree_s2.5745e47b.svg\";","export default __webpack_public_path__ + \"static/media/inv_slot.9b8f093d.svg\";","import PLAYER_BODY from \"Assets/player_body.svg\";\nimport FLOWER_L from \"Assets/flower_l.svg\";\nimport FLOWER_S from \"Assets/flower_s.svg\";\nimport HILL_L from \"Assets/hill_l.svg\";\nimport HILL_S from \"Assets/hill_s.svg\";\nimport PEBBLE_L from \"Assets/pebble_l.svg\";\nimport PEBBLE_M from \"Assets/pebble_m.svg\";\nimport PEBBLE_S from \"Assets/pebble_s.svg\";\nimport COPPER_L from \"Assets/copper_l.svg\";\nimport COPPER_S from \"Assets/copper_s.svg\";\nimport GOLD_L from \"Assets/gold_l.svg\";\nimport GOLD_S from \"Assets/gold_s.svg\";\nimport IRON_L from \"Assets/iron_l.svg\";\nimport IRON_S from \"Assets/iron_s.svg\";\nimport ROCK_L from \"Assets/rock_l.svg\";\nimport ROCK_S from \"Assets/rock_s.svg\";\nimport TREE_L1 from \"Assets/tree_l1.svg\";\nimport TREE_L2 from \"Assets/tree_l2.svg\";\nimport TREE_M1 from \"Assets/tree_m1.svg\";\nimport TREE_M2 from \"Assets/tree_m2.svg\";\nimport TREE_S1 from \"Assets/tree_s1.svg\";\nimport TREE_S2 from \"Assets/tree_s2.svg\";\nimport INV_SLOT from \"Assets/inv_slot.svg\";\n\nexport default function preload() {\n  this.load.svg(\"player_body\", PLAYER_BODY);\n  this.load.svg(\"flower_l\", FLOWER_L);\n  this.load.svg(\"flower_s\", FLOWER_S);\n  this.load.svg(\"pebble_l\", PEBBLE_L);\n  this.load.svg(\"pebble_m\", PEBBLE_M);\n  this.load.svg(\"pebble_s\", PEBBLE_S);\n  this.load.svg(\"hill_l\", HILL_L);\n  this.load.svg(\"hill_s\", HILL_S);\n  this.load.svg(\"copper_l\", COPPER_L);\n  this.load.svg(\"copper_s\", COPPER_S);\n  this.load.svg(\"gold_l\", GOLD_L);\n  this.load.svg(\"gold_s\", GOLD_S);\n  this.load.svg(\"iron_l\", IRON_L);\n  this.load.svg(\"iron_s\", IRON_S);\n  this.load.svg(\"rock_l\", ROCK_L);\n  this.load.svg(\"rock_s\", ROCK_S);\n  this.load.svg(\"tree_l1\", TREE_L1);\n  this.load.svg(\"tree_l2\", TREE_L2);\n  this.load.svg(\"tree_m1\", TREE_M1);\n  this.load.svg(\"tree_m2\", TREE_M2);\n  this.load.svg(\"tree_s1\", TREE_S1);\n  this.load.svg(\"tree_s2\", TREE_S2);\n  this.load.svg(\"inv_slot\", INV_SLOT);\n}\n","export default function update() {\n  this.player.cSeeker.doSeekCursor();\n  this.player.movement.doMove();\n}\n","import Phaser from \"phaser\";\n\nfunction doInitializeInput() {\n  const KeyCodes = Phaser.Input.Keyboard.KeyCodes;\n  this.W = this.input.keyboard.addKey(KeyCodes.W);\n  this.A = this.input.keyboard.addKey(KeyCodes.A);\n  this.S = this.input.keyboard.addKey(KeyCodes.S);\n  this.D = this.input.keyboard.addKey(KeyCodes.D);\n}\n\nexport default doInitializeInput;\n","import validate from \"aproba\";\n\nclass InventoryItem {\n  /**\n   * @param {string} ID\n   * @param {string} name\n   */\n  constructor(ID, name) {\n    validate(\"SS\", arguments);\n\n    this.ID = ID;\n    this.name = name;\n  }\n}\n\nexport default InventoryItem;\n","import validate from \"aproba\";\n\nclass InventorySlot {\n  constructor() {\n    this.item = null;\n    this.count = 0;\n  }\n\n  /**\n   * @param {object} item\n   * @param {number} count\n   */\n  doPushItem(item, count) {\n    validate(\"ON\", arguments);\n\n    this.count += count;\n    if (this.item === null) {\n      this.item = item;\n    }\n\n    return this;\n  }\n\n  /**\n   * @param {number} count\n   */\n  doRemoveItem(count) {\n    validate(\"N\", arguments);\n\n    this.count -= count;\n    if (this.count <= 0) {\n      this.count = 0;\n      this.item = null;\n    }\n\n    return this;\n  }\n}\n\nexport default InventorySlot;\n","import validate from \"aproba\";\n\nimport InventoryItem from \"./Inventory.Item\";\nimport InventorySlot from \"./Inventory.Slot\";\n\nclass Inventory {\n  constructor() {\n    this.slots = new Array(8).fill(new InventorySlot());\n  }\n\n  /**\n   * @param {object} item\n   * @param {number} count\n   */\n  doPushItem(item, count) {\n    validate(\"ON\", arguments);\n    if (item instanceof InventoryItem === false) return;\n\n    const slot = this.slots.find((slot) => {\n      return slot.item == null || slot.item.ID === item.ID;\n    });\n    if (slot) slot.doPushItem(item, count);\n  }\n\n  /**\n   * @param {object} item\n   * @param {number} count\n   */\n  doRemoveItem(item, count) {\n    validate(\"ON\", arguments);\n    if (item instanceof InventoryItem === false) return;\n\n    const slot = this.slots.find((slot) => slot.item.ID === item.ID);\n    if (slot) slot.doRemoveItem(count);\n  }\n\n  /**\n   * @param {number} count\n   */\n  doPushSlots(count) {\n    validate(\"N\", arguments);\n    const slots = new Array(count).fill(new InventorySlot());\n    this.slots = [...this.slots, slots];\n  }\n}\n\nexport default Inventory;\n","import validate from \"aproba\";\nimport Phaser from \"phaser\";\n\nclass Entity extends Phaser.GameObjects.Sprite {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   * @param {string} texture\n   */\n  constructor(scene, x, y, texture) {\n    validate(\"ONNS\", arguments);\n    super(scene, x, y, texture);\n    this._doAddToScene();\n  }\n\n  _doAddToScene() {\n    this.scene.add.existing(this);\n  }\n}\n\nexport default Entity;\n","import validate from \"aproba\";\nimport Entity from \"Entities/Entity\";\n\nclass InventorySlot extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"inv_slot\");\n\n    this.setScrollFactor(0);\n    this.setDepth(100);\n    this.setAlpha(0.9);\n  }\n}\n\nexport default InventorySlot;\n","import validate from \"aproba\";\nimport Inventory from \"Logic/Inventory\";\nimport InventorySlotUI from \"./InventorySlot\";\n\nclass InventoryUI {\n  /**\n   * @param {object} scene\n   */\n  constructor(scene) {\n    validate(\"O\", arguments);\n    this.inventory = new Inventory();\n    this.scene = scene;\n    this.doInitializeSlots();\n  }\n\n  /**\n   * @param {object} slot\n   * @param {number} index\n   */\n  doCreateSlot = (_, index, slots) => {\n    const count = slots.length;\n    const x = (window.innerWidth - count * 120) / 2 + index * 120 + 60;\n    const y = window.innerHeight - 100;\n    new InventorySlotUI(this.scene, x, y);\n  };\n\n  doInitializeSlots() {\n    this.inventory.slots.forEach(this.doCreateSlot);\n  }\n}\n\nexport default InventoryUI;\n","import InventoryUI from \"./Inventory\";\n\nfunction doSetupUI() {\n  new InventoryUI(this);\n}\n\nexport default doSetupUI;\n","import validate from \"aproba\";\nimport Entity from \"Entities/Entity\";\n\nclass RigidEntity extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   * @param {string} texture\n   */\n  constructor(scene, x, y, texture) {\n    validate(\"ONNS\", arguments);\n    super(scene, x, y, texture);\n    this._doEnablePhysics();\n    this._setCollider();\n  }\n\n  _doEnablePhysics() {\n    this.scene.physics.world.enable(this);\n    this.body.setAllowGravity(false);\n  }\n\n  _setCollider() {}\n}\n\nexport default RigidEntity;\n","import validate from \"aproba\";\nimport Phaser from \"phaser\";\n\nclass CursorSeeker {\n  /**\n   * @param {object} player\n   * @param {object} scene\n   */\n  constructor(player, scene) {\n    validate(\"OO\", arguments);\n    this.player = player;\n    this.scene = scene;\n  }\n\n  doSeekCursor() {\n    const { input, cameras } = this.scene;\n    input.mousePointer.updateWorldPoint(cameras.main);\n\n    const mouseX = input.mousePointer.worldX;\n    const mouseY = input.mousePointer.worldY;\n\n    const playerX = this.player.x;\n    const playerY = this.player.y;\n\n    const angle = Phaser.Math.Angle.Between(playerX, playerY, mouseX, mouseY);\n    this.player.setRotation(angle - 1.5);\n  }\n}\n\nexport default CursorSeeker;\n","import validate from \"aproba\";\n\nclass Movement {\n  /**\n   * @param {object} player\n   * @param {object} scene\n   */\n  constructor(player, scene) {\n    validate(\"OO\", arguments);\n\n    this.player = player;\n    this.scene = scene;\n\n    this.X = 0;\n    this.Y = 0;\n    this.SPEED = 200;\n  }\n\n  _handleYMovement() {\n    const { W, S } = this.scene;\n    if (W.isDown) this.Y = -1;\n    else if (S.isDown) this.Y = 1;\n    else this.Y = 0;\n  }\n\n  _handleXMovement() {\n    const { A, D } = this.scene;\n    if (D.isDown) this.X = 1;\n    else if (A.isDown) this.X = -1;\n    else this.X = 0;\n  }\n\n  doMove() {\n    this._handleYMovement();\n    this._handleXMovement();\n\n    if (this.X !== 0 && this.Y !== 0) {\n      this.player.body.setVelocityX((this.X * this.SPEED) / Math.sqrt(2));\n      this.player.body.setVelocityY((this.Y * this.SPEED) / Math.sqrt(2));\n      return;\n    }\n\n    this.player.body.setVelocityX(this.X * this.SPEED);\n    this.player.body.setVelocityY(this.Y * this.SPEED);\n  }\n}\n\nexport default Movement;\n","import validate from \"aproba\";\nimport RigidEntity from \"Entities/RigidEntity\";\nimport CursorSeeker from \"Logic/CursorSeeker\";\nimport Movement from \"Logic/Movement\";\n\nclass Player extends RigidEntity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n\n    super(scene, x, y, \"player_body\");\n    this.setDepth(25);\n\n    this.cSeeker = new CursorSeeker(this, scene);\n    this.movement = new Movement(this, scene);\n    this.setCollider();\n  }\n\n  setCollider() {\n    this.body.setCircle(35);\n  }\n}\n\nexport default Player;\n","const pallete = {\n  BACKGROUND: \"#9AB855\",\n};\n\nexport default pallete;\n","import validate from \"aproba\";\nimport Phaser from \"phaser\";\nimport colors from \"Config/ColorPallete\";\n\nclass Camera extends Phaser.Cameras.Scene2D.Camera {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(x, y, window.innerWidth, window.innerHeight);\n    this.scene = scene;\n    this._doInitialize();\n  }\n\n  _doInitialize() {\n    this.scene.cameras.cameras.length = 0;\n    this.scene.cameras.addExisting(this, true);\n    this.setBackgroundColor(colors.BACKGROUND);\n    this.doFollowPlayer();\n  }\n\n  doFollowPlayer() {\n    const { player } = this.scene;\n    this.startFollow(player);\n  }\n}\n\nexport default Camera;\n","import validate from \"aproba\";\nimport Entity from \"Entities/Entity\";\n\nclass SmallHill extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"hill_s\");\n    this.setDepth(0);\n  }\n}\n\nexport default SmallHill;\n","import validate from \"aproba\";\nimport Entity from \"Entities/Entity\";\n\nclass LargeHill extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"hill_l\");\n    this.setDepth(0);\n  }\n}\n\nexport default LargeHill;\n","import validate from \"aproba\";\nimport Entity from \"Entities/Entity\";\n\nclass LargeFlower extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"flower_l\");\n    this.setDepth(1);\n  }\n}\n\nexport default LargeFlower;\n","import validate from \"aproba\";\nimport Entity from \"Entities/Entity\";\n\nclass SmallFlower extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"flower_s\");\n    this.setDepth(1);\n  }\n}\n\nexport default SmallFlower;\n","import validate from \"aproba\";\nimport Entity from \"Entities/Entity\";\n\nclass LargePebble extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"pebble_l\");\n    this.setDepth(1);\n  }\n}\n\nexport default LargePebble;\n","import validate from \"aproba\";\nimport Entity from \"Entities/Entity\";\n\nclass MediumPebble extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"pebble_m\");\n    this.setDepth(1);\n  }\n}\n\nexport default MediumPebble;\n","import validate from \"aproba\";\nimport Entity from \"Entities/Entity\";\n\nclass SmallPebble extends Entity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"pebble_s\");\n    this.setDepth(1);\n  }\n}\n\nexport default SmallPebble;\n","import validate from \"aproba\";\nimport RigidEntity from \"Entities/RigidEntity\";\n\nclass LargeGold extends RigidEntity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"gold_l\");\n    this.setDepth(20);\n  }\n\n  _setCollider() {\n    const { scene, body } = this;\n    body.setImmovable();\n    body.setCircle(65, 5, 10);\n    scene.physics.add.collider(scene.player, this);\n  }\n}\n\nexport default LargeGold;\n","import validate from \"aproba\";\nimport RigidEntity from \"Entities/RigidEntity\";\n\nclass LargeRock extends RigidEntity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"rock_l\");\n    this.setDepth(20);\n  }\n\n  _setCollider() {\n    const { scene, body } = this;\n    body.setImmovable();\n    body.setCircle(65, 5, 10);\n    scene.physics.add.collider(scene.player, this);\n  }\n}\n\nexport default LargeRock;\n","import validate from \"aproba\";\nimport RigidEntity from \"Entities/RigidEntity\";\n\nclass SmallRock extends RigidEntity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"rock_s\");\n    this.setDepth(10);\n  }\n\n  _setCollider() {\n    const { scene, body } = this;\n    body.setImmovable();\n    body.setCircle(50, 5, 10);\n    scene.physics.add.collider(scene.player, this);\n  }\n}\n\nexport default SmallRock;\n","import validate from \"aproba\";\nimport RigidEntity from \"Entities/RigidEntity\";\n\nclass LargeTree1 extends RigidEntity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"tree_l1\");\n    this.setDepth(50);\n  }\n\n  _setCollider() {\n    const { scene, body } = this;\n    body.setImmovable();\n    body.setCircle(60, 150, 100);\n    scene.physics.add.collider(scene.player, this);\n  }\n}\n\nexport default LargeTree1;\n","import validate from \"aproba\";\nimport RigidEntity from \"Entities/RigidEntity\";\n\nclass MediumTree2 extends RigidEntity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"tree_m2\");\n    this.setDepth(40);\n  }\n\n  _setCollider() {\n    const { scene, body } = this;\n    body.setImmovable();\n    body.setCircle(50, 100, 60);\n    scene.physics.add.collider(scene.player, this);\n  }\n}\n\nexport default MediumTree2;\n","import validate from \"aproba\";\nimport RigidEntity from \"Entities/RigidEntity\";\n\nclass SmallTree1 extends RigidEntity {\n  /**\n   * @param {object} scene\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(scene, x, y) {\n    validate(\"ONN\", arguments);\n    super(scene, x, y, \"tree_s1\");\n    this.setDepth(30);\n  }\n\n  _setCollider() {\n    const { scene, body } = this;\n    body.setImmovable();\n    body.setCircle(30, 60, 40);\n    scene.physics.add.collider(scene.player, this);\n  }\n}\n\nexport default SmallTree1;\n","import doInitializeInput from \"Config/KeyboardInput\";\nimport doInitializeUI from \"GUI\";\n\n// INFO _ PLAYER _\nimport Player from \"Entities/Ecosystem/Player\";\nimport Camera from \"Entities/Camera\";\n\n// INFO _ HILLS _\nimport SmallHill from \"Entities/Environment/Hills/SmallHill\";\nimport LargeHill from \"Entities/Environment/Hills/LargeHill\";\n\n// INFO _ FLOWERS _\nimport LargeFlower from \"Entities/Environment/Flowers/LargeFlower\";\nimport SmallFlower from \"Entities/Environment/Flowers/SmallFlower\";\n\n// INFO _ PEBBLES _\nimport LargePebble from \"Entities/Environment/Pebbles/LargePebble\";\nimport MediumPebble from \"Entities/Environment/Pebbles/MediumPebble\";\nimport SmallPebble from \"Entities/Environment/Pebbles/SmallPebble\";\n\n// INFO _ ORES _\nimport LargeGold from \"Entities/Environment/Ores/LargeGold\";\nimport LargeRock from \"Entities/Environment/Ores/LargeRock\";\nimport SmallRock from \"Entities/Environment/Ores/SmallRock\";\n\n// INFO _ TREES _\nimport LargeTree1 from \"Entities/Environment/Trees/LargeTree1\";\nimport MediumTree2 from \"Entities/Environment/Trees/MediumTree2\";\nimport SmallTree1 from \"Entities/Environment/Trees/SmallTree1\";\n\nexport default function create() {\n  this.player = new Player(this, 0, 0);\n  this.camera = new Camera(this, 0, 0);\n\n  doInitializeInput.call(this);\n  doInitializeUI.call(this);\n\n  new LargeHill(this, 0, 0);\n  new SmallHill(this, -200, 200);\n\n  new LargeFlower(this, -100, -80);\n  new SmallFlower(this, 180, 40);\n\n  new LargePebble(this, -150, 160);\n  new MediumPebble(this, 120, -100);\n  new SmallPebble(this, 140, 300);\n\n  new SmallTree1(this, -200, -200);\n  new LargeTree1(this, -350, -50);\n  new MediumTree2(this, 250, -100);\n  new LargeRock(this, -340, -220);\n\n  new SmallRock(this, 200, 120);\n  new LargeGold(this, 100, 200);\n}\n","import Phaser from \"phaser\";\nimport preload from \"Logic/Scene/Preload\";\nimport update from \"Logic/Scene/Update\";\nimport create from \"Logic/Scene/Create\";\n\nconst CONFIG = (socket) => ({\n  type: Phaser.AUTO,\n  width: window.innerWidth,\n  height: window.innerHeight,\n  roundPixels: false,\n  physics: {\n    default: \"arcade\",\n    arcade: {\n      // debug: true,\n    },\n  },\n  scene: {\n    preload,\n    create: function () {\n      return create.apply(this, [socket]);\n    },\n    update: function () {\n      return update.apply(this, [socket]);\n    },\n  },\n});\n\nexport default CONFIG;\n","import \"index.css\";\nimport Phaser from \"phaser\";\nimport io from \"socket.io-client\";\nimport Config from \"Config/Phaser\";\n\nconst socket = io(\"http://localhost:8000\");\nconst _config = Config(socket);\nnew Phaser.Game(_config);\n"],"sourceRoot":""}